4-6+c(-1,1)*qt(.95, 100)*(0.5^2/100+2^2/100)^0.5
qt(.975, 15.04)
df<-(0.5^2/100 +2^2/100) / ((0.5^2/100)^2/99 +(2^2/100)^2/99)
df
0.5^2
0.25/100
4/100
0.0025^2
0.0025*0.0025
0.0025*0.0025/99
?qt
4-6+c(-1,1)*.95*(0.5^2/100+2^2/100)^0.5
?rexp
rexp(40, 0.2)
lambda <- 0.2
mu <- 1/lambda
sd<- 1/lambda
simNumber<-1000
crt<-rexp(40, 0.2)
hist(rexp)
hist(crt)
crt<-rexp(40, 0.2)
hist(crt)
crt<-rexp(40, 0.2)
hist(crt)
nosim <- 1000
xfunc <- function(x, n) sqrt(n) * (mean(x) - mu) / sd
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot2)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
lambda<-0.2
cfunc <- function(x, n) rexp(n, lambdaO
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
lambda<-0.2
cfunc <- function(x, n) rexp(n, lambda)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
head(x)
head(dat)
nrow(dat)
dat[60000, ]
mu
mu<-1/lambda
mu
lambda
var <- 1 / (lambda^2)
var
mean(dat$x)
var(dat$x)
25*25
625/1000
*5
0.625*5
q()
4-6+c(-1,1)*qnorm(0.95)*(0.5^2/100 + 2^2/100)^.5
4-6+c(-1,1)*qnorm(0.95)*(0.5/100 + 2/100)^.5
install.packages("rmarkdown")
lambda <- 0.2
mu <- 1/lambda
sd<- 1/lambda
nosim <- 1000
cfunc <- function(x, n) rexp(x, lambda)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot2)
lambda <- 0.2
mu <- 1/lambda
sd<- 1/lambda
nosim <- 1000
cfunc <- function(x, n) rexp(x, lambda)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
cfunc <- function() rexp(40, lambda)
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
head(dat)
rexp(40, 0.2)
mean(dat$x)
var(dat$x)
nrow(dat)
1/lambda
1/lambda^2
ttt<-rexp(40, 0.2)
mean(ttt)
var(ttt)
library(lubridate)
library(lubridate)
data(TootGrowth)
data(ToothGrowth)
head(ToothGrowth)
nrow(ToothGrowth)
unique(dose)
unique(ToothGrowth$dose)
plot(ToothGrowth$len, coor = dose)
qplot(ToothGrowth$len, coor = dose)
qplot(len, data=ToothGrowth, color = dose)
ToothGrowth$len
qplot(len, data=ToothGrowth, color = ToothGrowth$dose)
qplot(len, data=ToothGrowth)
qplot(len, data=ToothGrowth, binwidth = 2)
class(ToothGrowth$len)
class(ToothGrowth$dose)
qplot(len, data=ToothGrowth, binwidth = 2, color = dose)
qplot(len, data=ToothGrowth, binwidth = 2, col = dose)
qplot(len, dose, data=ToothGrowth, binwidth = 2, col = dose)
qplot(dose, len, data=ToothGrowth, binwidth = 2, col = dose)
g<-ggplot(ToothGrowth, aes(x=len, fil = dose)) + geom_point()
g<-ggplot(ToothGrowth, aes(x=len, fil = dose)) + geom_point()
g<-ggplot(ToothGrowth, aes(x=len, fil = dose))
print(g)
g+geom_line()
g+geom_point()
g+geom_point(aes(group =1))
g<-ggplot(ToothGrowth, aes(x=len, fil = dose)) + geom_point()
qplot(dose, len, data=ToothGrowth, binwidth = 2, col = dose)
ToothGrowth$dose
unique(ToothGrowth$dose)
qplot(len, data=ToothGrowth, binwidth = 2, facets=~.dose)
qplot(len, dose, data=ToothGrowth, binwidth = 2, facets=~.dose)
class(ToothGrows)
class(ToothGrowth)
colnames(ToothGrowth)
colclass(ToothGrowth)
colclasses(ToothGrowth)
?col
unique(ToothGrowth$supp)
(ToothGrowth$supp)
class(ToothGrowth$supp)
unique(ToothGrowth)
unique(ToothGrowth$len)
unique(ToothGrowth$supp)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
--------------------------------------------------------------------------------
g<-ggplot(len, dose, data = ToothGrowth, panel = panel.smooth)
head(ToothGrowth)
g<-ggplot(len, dose, data = ToothGrowth)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement)
")"
?)
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
qqnorm(dat$x)
dat
head(dat)
coplot(x | size, data = dat, pnael = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
coplot(x, data = dat, pnael = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
coplot(x ~ size, data = dat, pnael = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
coplot(x | size, data = dat, panel = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x | size, data = dat, panel = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x, data = dat, panel = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x, data = dat, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x, size, data = dat, xlab = "exponential distribution on 3 random experiments of 1000 samples")
head(dat)
class(size)
class(dat$size)
plot(x | as.numeric(as.character(size)), data = dat, panel = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x | as.numeric(as.character(dat$size)), data = dat, panel = panel.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(x | as.numeric(as.character(dat$size)), data = dat, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(dat$x | as.numeric(as.character(dat$size)), panel = panels.smooth, xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(dat$x | as.numeric(as.character(dat$size)), xlab = "exponential distribution on 3 random experiments of 1000 samples")
plot(dat$x ~ as.numeric(as.character(dat$size)), xlab = "exponential distribution on 3 random experiments of 1000 samples")
hist(dat$x ~ as.numeric(as.character(dat$size)), xlab = "exponential distribution on 3 random experiments of 1000 samples")
hist(as.numeric(dat$x) ~ as.numeric(as.character(dat$size)), xlab = "exponential distribution on 3 random experiments of 1000 samples")
class(dat$x)
histogram(as.numeric(dat$x) ~ as.numeric(as.character(dat$size)), xlab = "exponential distribution on 3 random experiments of 1000 samples")
hist(dat$x, xlab = "exponential distribution on 3 random experiments of 1000 samples")
ggplot(dat, aes(x, fill = size))
ggplot(dat, aes(x, fill = size)) + geom_point()
ggplot(dat, aes(x = x, fill = size)) + geom_point()
ggplot(dat, aes(x = x, fill = size)) + geom_point(aes(group =1))
ggplot(dat, aes(x = x))
g+geom_point()
qplot(x, data = dat)
qplot(x, data = dat, binwidth = 2)
qplot(x, data= dat, binwidth = 2, facets = ~.size)
qplot(x, data = dat, binwidth = 2)
qplot(x, data = dat, binwidth = 2, col = size)
qplot(x, data = dat, binwidth = 2, col = size, fill = size)
qplot(x, data = dat, binwidth = 3, col = size)
qplot(x, data = dat, binwidth = 3, col = size, fill = size)
qplot(x, data = dat, binwidth = 4, col = size, fill = size)
qplot(x, data = dat, binwidth = 3.5, col = size, fill = size)
?fitdistr
fitdistr(dat$x, "exponential")
library(MASS)
fitdistrib
fitdistr
ls()
head(dat)
fitdistr(dat$x, "exponential")
res<-fitdistr(dat$x, "exponential")
res
set.seed(123)
x3 <- rweibull(100, shape = 4, scale = 100)
fitdistr(x3, "weibull")
x4<-rexp(40, 0.2)
fitdistr(x4, "exponential")
head(dat)
ad.test(dat$x)
library(nortest)
library(nortest)
install.packages("nortest")
library(nortest)
ad.test(dat$x)
?ad.test
ad.test(rnorm(100, mean = 5, sd = 3))
ad.test(runif(100, min = 2, max = 4))
qqnorm(dat$x)
?qqnorm
install.packages("Hmisc")
?mutate
with(ToothGrowth, {
boxplot(len ~ dose, boxwex = 0.25, at = 1:3 - 0.2,
subset = (supp == "VC"), col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length", ylim = c(0, 35))
boxplot(len ~ dose, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
})
# alternate form that avoids subset argument:
with(subset(ToothGrowth, supp == "VC"),
boxplot(len ~ dose, boxwex = 0.25, at = 1:3 - 0.2,
col = "yellow", main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length", ylim = c(0, 35)))
with(subset(ToothGrowth,  supp == "OJ"),
boxplot(len ~ dose, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2,
col = "orange"))
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
ls()
nrow(dat)
sample1 <- subset(dat, dat$size == 30)
sample2 <- subset(dat, dat$size == 20)
t.test(sample1-sample2)
sample1 <- subset(dat, dat$size == 10)
sample2 <- subset(dat, dat$size == 20)
t.test(sample1-sample2)
sample1 <- subset(dat, dat$size == 10)
sample2 <- subset(dat, dat$size == 30)
t.test(sample1-sample2)
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot2)
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
ggplot(dat, aes(x, color = size))+geom_density()
ggplot(dat, aes(x, color = size))+geom_histogram()
ggplot(dat, aes(x, fill = size))+geom_histogram()
g<-ggplot(dat, aes(x, fill = size))+geom_histogram()
g+sta_function(fun=dnorm, size = 2)
g+stat_function(fun=dnorm, size = 2)
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(aes(..density..))
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(aes(..density..))
g+stat_function(fun=dnorm, size = 2)
g+stat_function(fun=rexp, size = 2)
g+facet_grid(.~size)
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(aes(y=..density..))
g+stat_function(fun=rexp, size = 2)
g+stat_function(fun=rexp, size = 2)
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(aes(y=..density..))
g+stat_function(fun=dnorm, size = 2)
g+stat_function(fun=dnorm, size = 2)
g+facet_grid(.~size)
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(binwidth = .3, color = "black", aes(y=..density..))
g+stat_function(fun=dnorm, size = 2)
g+facet_grid(.~size)
g<-ggplot(dat, aes(x, fill = size))+geom_histogram(binwidth = .3, color = "black", aes(y=..density..))
g+stat_function(fun=dnorm, size = 2)
getwd()
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
with(subset(ToothGrowth, supp == "VC"),
boxplot(len ~ dose, boxwex = 0.25, at = 1:3 - 0.2,
col = "yellow", main = "Tooth Growth",
xlab = "VC dose",
ylab = "tooth length", ylim = c(0, 35)))
with(subset(ToothGrowth,  supp == "OJ"),
boxplot(len ~ dose, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2,
col = "orange"))
legend(2, 9, c("VC", "OJ"),
fill = c("yellow", "orange"))
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
gOJ<-subset(ToothGrowth, ToothGrowth$Supp == "OJ")
gVC<-subset(ToothGrowth, ToothGrowth$Supp == "VC")
summary(gOJ)
head(gOJ)
gOJ<-subset(ToothGrowth, ToothGrowth$supp == "OJ")
gVC<-subset(ToothGrowth, ToothGrowth$supp == "VC")
head(gOJ)
nrow(gOJ)
summary(gOJ)
summary(gVC)
t.test(len~dose, paired = FALSE, var.equal = FALSE, gOJ)$conf
library(datasets)
data(chickWeight)
data(ChickWeight)
library(reshape2)
library(dplyr)
head(ChickWeight)
wideCW<-dcast(ChickWeight, Diet+Chick~Time, value.var = "weight")
head(wideCW)
nrow(wideCW)
wideTG<-dcast(ToothGrowth, supp~dose, value.var = "len")
head(wideTG)
wideTG<-dcast(ToothGrowth, len~dose, value.var = "supp")
wideTG<-dcast(ToothGrowth, len~dose, value.var = "supp")
head(wideTG)
wideTG<-dcast(ToothGrowth, supp+len~dose, value.var = "len")
head(wideTG)
head(ToothGrowth)
nrow(wideTG)
head(ChickWeight)
nrow(ChickWeight)
?t.test
t.test(ToothGrowth$x, var.equal=FALSE)
head(ToothGrowth)
t.test(ToothGrowth$len, var.equal=FALSE)
t.test(gOJ$len, var.equal=FALSE)
t.test(gVC$len, var.equal=FALSE)
((23.12989 - 20.66333) * sqrt(30)) /1.96
((20.04992 - 16.96333) * sqrt(30)) /1.96
t.test(TothGrowth, var.equal = FALSE)
t.test(ToothGrowth, var.equal = FALSE)
t.test(ToothGrowth$len, var.equal = FALSE)
x1<- c(140, 138, 150, 148, 135)
x1
x2<-132, 135, 151, 146, 130
x2<-c(132, 135, 151, 146, 130)
x2
mean(x1)
mean(x2)
sd(x1)
sd(x2)
t.test(x2-x1)
?t.test
t.test(x2-x1, alternative = "two.sided")
t.test(x2-x1, alternative = "two.sided", paired = TRUE)
t.test(x2-x1, alternative = "two.sided", var.equal = TRUE)
t.test(x2-x1, alternative = "two.sided", var.equal = FALSE)
qnorm(0.05)
qnorm(0.025)
t.test(mu=1100, sd=30, n= 9)
30*1.96/3
0.11*1.96
1.65/3
23/0.55
41.81/3
2/13.83
power.t.test(n=100, delta = .01, sd=.04, alt = "one.sided")$power
?power.t.test
power.t.test(power = 0.90, delta = .01, sd=.04, alt = "one.sided")$n
power.t.test(power = 0.90, sd=.04, alt = "one.sided")$n
power.t.test(power = 0.90, delta= .01, sig.level = 0.05, sd=.04, alt = "one.sided")$n
power.t.test(power = 0.90, sig.level = 0.05, sd=.04, alt = "one.sided")$n
power.t.test(n=100, delta = .01, sd=.04, alt = "one.sided", sig.level = 0.05)$power
power.t.test(n=100, delta = .01, sd=.04, alt = "one.sided", sig.level = 0.05)$power
?power.t.test
power.t.test(n=100, delta = .01, sd=.04, alt = "one.sided", sig.level = 0.05, type = "one.sample")$power
power.t.test(power = 0.90, sig.level = 0.05, sd=.04, alt = "one.sided", type = "one.sample")$n
power.t.test(power = 0.90, delta = .01, sig.level = 0.05, sd=.04, alt = "one.sided", type = "one.sample")$n
ppois(1787, 1, lower.ail = FALSE)
ppois(1787, 1, lower.tail = FALSE)
ppois(1786, 1, lower.tail = FALSE)
?t.test
z<-(44-42.04)/(12*sqrt(2/288))
pz<-2*pnorm(-abs(z))
pz
pbinom(74, size = 4, prob= 0.5, lower.tail = FALSE)
pbinom(0.74, size = 4, prob= 0.5, lower.tail = FALSE)
ppois(1786, lambda = 10*1787, lower.tail = FALSE)
pnorm(15800 / 30, mean = 520, sd = sqrt(520 / 30), lower.tail=FALSE)
pnorm(10/1787, mean = 1, sd = sqrt(1 / 100), lower.tail=FALSE)
pnorm(10/1787, mean = 1, sd = sqrt(1 / 1787), lower.tail=FALSE)
pnorm(10/100, mean = 1, sd = sqrt(1 / 1787), lower.tail=FALSE)
pnorm(10/100, mean = 1, sd = sqrt(1 / 1787), lower.tail=TRUE)
pnorm(10/1787, mean = 1, sd = sqrt(1 / 1787), lower.tail=TRUE)
?ppois
pnorm(10 / 17.87, mean = 1, sd = sqrt(1 / 17.87), lower.tail=FALSE)
pnorm(10 / 17.87, mean = 1, sd = sqrt(1 / 17.87), lower.tail=TRUE)
ppois(1787-1, lambda = 1 *100, lower.tail=TRUE)
ppois(1787-1, lambda = 1 *100, lower.tail=FALSE)
ppois(17.87-1, lambda = 1 *100, lower.tail=FALSE)
ppois(17.87-1, lambda = 1 *17.87, lower.tail=FALSE)
ppois(17.87-1, lambda = 1 *17.87, lower.tail=TRUE)
?t.test
binom.test(3, 4)
t.test(-3, 1, paired= FALSE, alternative = "two.sided")
t.test(mu =-4, sd = sqrt(1.5^2 + 1.8^2)/3, paired= FALSE, alternative = "two.sided")
sd = sqrt(1.5^2 + 1.8^2)/3
sd
-4/0.781025
2*pnorm(-abs(-5.121475))
3*sqrt(2.75)
-4/4/974937
choose(4,3)*0.5^4+choose(4,4)*0.5^4
pbinom(2, size = 4, prob = 0.5, lower.tail=FALSE)
qt(.975, 8)
q()
knit2html("pa1_template.rmd")
library(knitr)
knit2html("pa1_template.rmd")
dir()
setwd("c:/users/daniela/repdata/repdata_peerassessment1")
knit2html("pa1_template.rmd")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
---
title: "Reproducible Research - Peer Asignment 1"
author: "Daniela Alexander"
